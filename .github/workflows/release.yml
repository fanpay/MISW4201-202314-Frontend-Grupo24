name: Crear nueva versión - release
on: 
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string
      release_tag:
        required: true
        type: string
        
jobs:        
  create_branch_release:
   name: Se crea la rama release
   permissions: write-all
   runs-on: ${{ matrix.os }}
   strategy:
      matrix:
        os: [ubuntu-latest]
   if: ${{ contains(github.event.head_commit.message, '[release]') }}
   steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v3
      with:
        ref: develop
    - name: Crear rama
      run: |
        git fetch origin
        git checkout develop
        git pull
        git checkout -b ${{inputs.release_version}}
        git push -f -u origin ${{inputs.release_version}}
    - name: Mezcla develop -> release
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: develop
        target-branch: ${{inputs.release_version}}
        commit-message: "Se actualiza la rama ${{inputs.release_version}} con la rama develop"
        
  test_branch_release:
    needs: create_branch_release
    name: Se prueba la rama release
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:     
    - name: Checkout de repositorio
      uses: actions/checkout@v3
      with:
        ref: ${{inputs.release_version}}
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install dependencies
      run: npm install
    - name: Install angular
      run: npm install -g @angular/cli@latest
    - name: Ejecutar build
      id: ejecutar-build
      run: |
          ng build
    - name:  Ejecutar pruebas y cubrimiento personalizado
      id: correr-pruebas
      run: |
          ng test --watch=false --code-coverage --source-map true --browsers ChromeHeadless


  merge_branch_release:
    needs: test_branch_release
    name: Se realizar merge de la rama release en la rama principal
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:     
    - name: Mezcla release -> main
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: ${{inputs.release_version}}
        target-branch: main
        commit-message: "Se integra rama ${{inputs.release_version}} en main. Rama main actualizada"
        
    - name: Mezcla release -> develop
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: ${{inputs.release_version}}
        target-branch: develop
        commit-message: "Se integra rama ${{inputs.release_version}} en develop. Rama develop actualizada"
           

  tagging_main:
    needs: [merge_branch_release]
    name: Se taggea rama principal con la versión actual
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Creación de tag de versionamiento
        run: |
            git config --global user.email "admin@github.com"
            git config --global user.name "Admin"
            git tag -a ${{inputs.release_tag}} HEAD -m 'Se realiza nuevo release ${{inputs.release_tag}}'
            git push origin ${{inputs.release_tag}}